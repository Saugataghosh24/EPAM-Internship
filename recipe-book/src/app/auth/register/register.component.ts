// src/app/auth/register/register.component.ts
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { RouterModule, Router } from '@angular/router';
import { AuthService } from '../../core/services/auth.service';
import { User } from '../../core/models/user.model';

@Component({
  selector: 'app-register',
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    RouterModule
  ],
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css']
})
export class RegisterComponent {
  registerForm = {
    firstName: '',
    lastName: '',
    email: '',
    country: '',
    region: '',
    password: '',
    confirmPassword: ''
  };
  
  errorMessage = '';
  
  countries = ['USA', 'Canada', 'UK', 'Australia', 'India', 'Germany', 'France', 'Japan'];
  regions: { [key: string]: string[] } = {
    'USA': ['California', 'New York', 'Texas', 'Florida'],
    'Canada': ['Ontario', 'Quebec', 'British Columbia'],
    'UK': ['England', 'Scotland', 'Wales'],
    'Australia': ['New South Wales', 'Victoria', 'Queensland'],
    'India': ['Maharashtra', 'Delhi', 'Karnataka'],
    'Germany': ['Bavaria', 'Berlin', 'Hamburg'],
    'France': ['ÃŽle-de-France', 'Provence', 'Normandy'],
    'Japan': ['Tokyo', 'Osaka', 'Kyoto']
  };
  
  selectedFile: File | null = null;
  imagePreview: string | null = null;

  constructor(
    private authService: AuthService,
    private router: Router
  ) { }

  onFileSelected(event: Event): void {
    const input = event.target as HTMLInputElement;
    if (input.files && input.files.length > 0) {
      this.selectedFile = input.files[0];
      
      // Create preview
      const reader = new FileReader();
      reader.onload = () => {
        this.imagePreview = reader.result as string;
      };
      reader.readAsDataURL(this.selectedFile);
    }
  }

  onSubmit(): void {
    console.log('Register form submitted', this.registerForm); // Add this for debugging
    
    const { firstName, lastName, email, country, region, password, confirmPassword } = this.registerForm;
    
    // Validation
    if (!firstName || !lastName || !email || !country || !region || !password) {
      this.errorMessage = 'Please fill in all required fields';
      return;
    }
    
    if (password !== confirmPassword) {
      this.errorMessage = 'Passwords do not match';
      return;
    }
    
    // Create user object
    const user: User = {
      id: '', // Will be generated by service
      firstName,
      lastName,
      email,
      password,
      country,
      region,
      profileImage: this.imagePreview || undefined
    };
    
    try {
      const success = this.authService.register(user);
      console.log('Register success:', success); // Add this for debugging
      
      if (success) {
        // Auto login after registration
        this.authService.login(email, password);
        this.router.navigate(['/']);
      } else {
        this.errorMessage = 'Email already exists';
      }
    } catch (error) {
      console.error('Register error:', error); // Add this for debugging
      this.errorMessage = 'An error occurred during registration';
    }
  }
}